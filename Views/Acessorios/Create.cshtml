@model PersonalMVC.Models.AcessorioViewModel
@{
    ViewBag.Title = "Novo Acessorio";
}

@if (@TempData["Mensagem"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["Mensagem"]</div>
}
<!--Configuração para exibir mensagem de erro -->
@if (@TempData["MensagemErro"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["MensagemErro"]</div>
}

<h2>Criar um Novo Acessorio</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />


        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoAcessorios, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                
                @Html.DropDownListFor(model => model.TipoAcessorios , Html.GetEnumSelectList(typeof(PersonalMVC.Models.Enuns.TipoAcessoriosEnum)), 
                    "---Selecione---", new { @class = "form-control" })
            </div>
        </div>  

        <div class="form-group">
            @Html.LabelFor(model => model.Marca, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Marca, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Modelo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Modelo, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Materiais, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Materiais, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
         <div class="form-group">
            @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <br/>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-6">
                <input type="submit" value="Salvar" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Retornar", "Index")
</div>
